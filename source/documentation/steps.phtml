---
layout: documentation
title: Steps
---

<h2>Steps</h2>

<aside class="notice">
    <p>
        <strong>Please Note:</strong> This part of the documentation is as yet unfinished.
    </p>
</aside>

<ul>
    <li><a href="#steps">Steps</a>
        <ul>
            <li><a href="#boot-kernel">BootKernel</a></li>
            <li><a href="#read-cache">ReadCache</a></li>
            <li><a href="#before">Before</a></li>
            <li><a href="#clear">Clear</a></li>
            <li><a href="#load-content-types">LoadContentTypes</a></li>
            <li><a href="#load-content-renderers">LoadContentRenderers</a></li>
            <li><a href="#load-content-generators">LoadContentGenerators</a></li>
            <li><a href="#load-source-files">LoadSourceFiles</a></li>
            <li><a href="#json">Json</a></li>
            <li><a href="#parse-content-types">ParseContentTypes</a></li>
            <li><a href="#compile">Compile</a></li>
            <li><a href="#write-files">WriteFiles</a></li>
            <li><a href="#write-cache">WriteCache</a></li>
            <li><a href="#copy">Copy</a></li>
            <li><a href="#clean">Clean</a></li>
            <li><a href="#after">After</a></li>
        </ul>
    </li>
</ul>

<hr/>

<h3><a name="steps" href="#steps">Steps</a></h3>
<p>
    Steps are one of the first things loaded into the IoC as part of the core boot process within Tapestry. They are
    handled by the <a href="https://github.com/tapestry-cloud/tapestry/blob/master/src/Providers/CompileStepsServiceProvider.php">CompileStepsServiceProvider</a>
    class and injected into the <a href="<?= $this->url('documentation/container') ?>">Container</a> with the alias <code>Compile.Steps</code>
</p>

<p>
    Tapestry comes shipped with the following sixteen steps configured:
</p>

<h4><a name="boot-kernel" href="#boot-kernel">BootKernel</a></h4>
<p>
    The workspace Kernel is already registered with the Container by the ProjectKernelServiceProvider at which point its
    <code>register</code> method is executed. Upon invocation the BootKernel step requests the Kernel from the Container
    and executes its <code>boot</code> method.
</p>
<h4><a name="read-cache" href="#read-cache">ReadCache</a></h4>
<p>
    The ReadCache step initiates and loads the caching sub system before injecting it into the Project class with the alias
    of <code>cache</code>. This step also has the task of invalidating the entire cache upon any of the configuration files
    or the version of Tapestry changing.
</p>
<h4><a name="before" href="#before">Before</a></h4>
<p>&hellip;</p>
<h4><a name="clear" href="#clear">Clear</a></h4>
<p>&hellip;</p>
<h4><a name="load-content-types" href="#load-content-types">LoadContentTypes</a></h4>
<p>&hellip;</p>
<h4><a name="load-content-renderers" href="#load-content-renderers">LoadContentRenderers</a></h4>
<p>&hellip;</p>
<h4><a name="load-content-generators" href="#load-content-generators">LoadContentGenerators</a></h4>
<p>&hellip;</p>
<h4><a name="load-source-files" href="#load-source-files">LoadSourceFiles</a></h4>
<p>&hellip;</p>
<h4><a name="json" href="#json">Json</a></h4>
<p>&hellip;</p>
<h4><a name="parse-content-types" href="#parse-content-types">ParseContentTypes</a></h4>
<p>&hellip;</p>
<h4><a name="compile" href="#compile">Compile</a></h4>
<p>&hellip;</p>
<h4><a name="write-files" href="#write-files">WriteFiles</a></h4>
<p>&hellip;</p>
<h4><a name="write-cache" href="#write-cache">WriteCache</a></h4>
<p>&hellip;</p>
<h4><a name="copy" href="#copy">Copy</a></h4>
<p>&hellip;</p>
<h4><a name="clean" href="#clean">Clean</a></h4>
<p>&hellip;</p>
<h4><a name="after" href="#after">After</a></h4>
<p>&hellip;</p>